-- üö® ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Products Summary View ‡∏î‡πà‡∏ß‡∏ô
-- ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ column "product_id" does not exist

-- ‡∏•‡∏ö view ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢
DROP VIEW IF EXISTS public.products_summary;

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á products_summary view ‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ relationship ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
-- inventory_items.sku <-> products.sku_code
-- ‡πÉ‡∏ä‡πâ FULL OUTER JOIN ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
CREATE OR REPLACE VIEW public.products_summary AS
SELECT DISTINCT
    COALESCE(p.id, 'missing-' || inv.sku) as product_id,
    COALESCE(p.sku_code, inv.sku) as sku,
    COALESCE(p.product_name, '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ' || inv.sku) as product_name,
    COALESCE(p.product_type, 'FG') as product_type,
    p.category,
    p.subcategory,
    p.brand,
    COALESCE(p.unit_of_measure, '‡∏ä‡∏¥‡πâ‡∏ô') as unit_of_measure,
    COALESCE(p.is_active, true) as is_active,
    COALESCE(p.created_at, NOW()) as created_at,
    COALESCE(p.updated_at, NOW()) as updated_at,
    -- ‡∏£‡∏ß‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏à‡∏≤‡∏Å inventory_items ‡∏ú‡πà‡∏≤‡∏ô sku
    COALESCE(inv.total_level1_quantity, 0) as total_level1_quantity,
    COALESCE(inv.total_level2_quantity, 0) as total_level2_quantity,
    COALESCE(inv.total_level3_quantity, 0) as total_level3_quantity,
    COALESCE(inv.location_count, 0) as location_count,
    -- ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á
    COALESCE(inv.unit_level1_name, COALESCE(p.unit_of_measure, '‡∏•‡∏±‡∏á')) as unit_level1_name,
    COALESCE(inv.unit_level1_rate, 24) as unit_level1_rate,
    COALESCE(inv.unit_level2_name, COALESCE(p.unit_of_measure, '‡∏Å‡∏•‡πà‡∏≠‡∏á')) as unit_level2_name,
    COALESCE(inv.unit_level2_rate, 1) as unit_level2_rate,
    COALESCE(inv.unit_level3_name, COALESCE(p.unit_of_measure, '‡∏ä‡∏¥‡πâ‡∏ô')) as unit_level3_name,
    -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢ (total_pieces)
    COALESCE(
        (inv.total_level1_quantity * COALESCE(inv.unit_level1_rate, 24)) +
        (inv.total_level2_quantity * COALESCE(inv.unit_level2_rate, 1)) +
        inv.total_level3_quantity,
        0
    ) as total_pieces,
    -- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏ï‡πá‡∏≠‡∏Å (stock_status)
    CASE
        WHEN COALESCE(
            (inv.total_level1_quantity * COALESCE(inv.unit_level1_rate, 24)) +
            (inv.total_level2_quantity * COALESCE(inv.unit_level2_rate, 1)) +
            inv.total_level3_quantity,
            0
        ) = 0 THEN 'out_of_stock'
        WHEN COALESCE(
            (inv.total_level1_quantity * COALESCE(inv.unit_level1_rate, 24)) +
            (inv.total_level2_quantity * COALESCE(inv.unit_level2_rate, 1)) +
            inv.total_level3_quantity,
            0
        ) < 10 THEN 'low_stock'
        WHEN COALESCE(
            (inv.total_level1_quantity * COALESCE(inv.unit_level1_rate, 24)) +
            (inv.total_level2_quantity * COALESCE(inv.unit_level2_rate, 1)) +
            inv.total_level3_quantity,
            0
        ) < 50 THEN 'medium_stock'
        ELSE 'high_stock'
    END as stock_status
FROM public.products p
FULL OUTER JOIN (
    SELECT
        sku,
        SUM(COALESCE(unit_level1_quantity, 0)) as total_level1_quantity,
        SUM(COALESCE(unit_level2_quantity, 0)) as total_level2_quantity,
        SUM(COALESCE(unit_level3_quantity, 0)) as total_level3_quantity,
        COUNT(DISTINCT location) as location_count,
        -- ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πà‡∏ß‡∏¢
        MAX(unit_level1_name) as unit_level1_name,
        MAX(unit_level1_rate) as unit_level1_rate,
        MAX(unit_level2_name) as unit_level2_name,
        MAX(unit_level2_rate) as unit_level2_rate,
        MAX(unit_level3_name) as unit_level3_name
    FROM public.inventory_items
    WHERE sku IS NOT NULL
    GROUP BY sku
) inv ON p.sku_code = inv.sku
WHERE COALESCE(p.is_active, true) = true;

-- ‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á view
GRANT SELECT ON public.products_summary TO anon, authenticated;

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ view ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
SELECT COUNT(*) as total_products FROM public.products_summary;