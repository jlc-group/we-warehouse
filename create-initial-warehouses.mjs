import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://ogrcpzzmmudztwjfwjvu.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9ncmNwenptbXVkenR3amZ3anZ1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIyMDc5NjEsImV4cCI6MjA2Nzc4Mzk2MX0.te2vIfRdzcgXQ_7tW4NU3FuxI6PoxpURH4YcIZYmZzU';

const supabase = createClient(supabaseUrl, supabaseKey);

console.log('üè≠ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö...\n');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏° location prefixes ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (A-Z)
const warehouses = [
  {
    name: '‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å',
    code: 'WH-MAIN',
    description: '‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (A-Z)',
    address: '‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏•‡∏±‡∏Å',
    location_prefix_start: 'A',
    location_prefix_end: 'Z',
    max_levels: 20,
    max_positions: 4,
    is_active: true
  }
];

try {
  // Check if warehouses already exist
  const { data: existing } = await supabase
    .from('warehouses')
    .select('code');

  if (existing && existing.length > 0) {
    console.log('‚ö†Ô∏è  ‡∏û‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß:');
    existing.forEach(w => console.log(`   - ${w.code}`));
    console.log('\n‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)');
    process.exit(0);
  }

  // Create warehouses
  const { data: created, error } = await supabase
    .from('warehouses')
    .insert(warehouses)
    .select();

  if (error) {
    console.error('‚ùå Error:', error.message);
    console.error('Details:', error);
    process.exit(1);
  }

  console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:\n');
  created.forEach(wh => {
    console.log(`üì¶ ${wh.name} (${wh.code})`);
    console.log(`   ID: ${wh.id}`);
    console.log(`   ‡∏ä‡πà‡∏ß‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${wh.location_prefix_start}-${wh.location_prefix_end}`);
    console.log(`   ‡∏Ç‡∏ô‡∏≤‡∏î: ${wh.max_levels} ‡∏ä‡∏±‡πâ‡∏ô x ${wh.max_positions} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á`);
    console.log();
  });

  // Update existing inventory_items to link with the main warehouse
  console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡∏•‡∏±‡∏Å...');

  const mainWarehouse = created[0];
  const { data: updated, error: updateError } = await supabase
    .from('inventory_items')
    .update({ warehouse_id: mainWarehouse.id })
    .is('warehouse_id', null)
    .select('id');

  if (updateError) {
    console.warn('‚ö†Ô∏è  Warning updating inventory items:', updateError.message);
  } else if (updated) {
    console.log(`‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á ${updated.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡∏•‡∏±‡∏Å`);
  }

  console.log('\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!');

} catch (err) {
  console.error('‚ùå Exception:', err.message);
  process.exit(1);
}
