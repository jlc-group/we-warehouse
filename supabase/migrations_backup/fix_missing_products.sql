-- р╣Бр╕Бр╣Йр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕лр╕▓р╕вр╣Др╕Ы - р╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е inventory р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡
-- р╕гр╕▒р╕Щр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕Щр╕╡р╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е inventory_items р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡

DO $$
DECLARE
    product_record RECORD;
    missing_count INTEGER := 0;
    created_count INTEGER := 0;
BEGIN
    -- р╕Щр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡р╣Гр╕Щ inventory
    SELECT COUNT(*) INTO missing_count
    FROM public.products p
    LEFT JOIN public.inventory_items inv ON p.id = inv.product_id
    WHERE p.is_active = true
    AND inv.product_id IS NULL;

    RAISE NOTICE 'ЁЯФН р╕Юр╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡р╣Гр╕Щ inventory: % р╕гр╕▓р╕вр╕Бр╕▓р╕г', missing_count;

    IF missing_count > 0 THEN
        -- р╕кр╕гр╣Йр╕▓р╕З inventory_items р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡
        FOR product_record IN
            SELECT p.id, p.sku_code, p.product_name, p.product_type
            FROM public.products p
            LEFT JOIN public.inventory_items inv ON p.id = inv.product_id
            WHERE p.is_active = true
            AND inv.product_id IS NULL
        LOOP
            -- р╕кр╕гр╣Йр╕▓р╕З inventory_item р╣Гр╕лр╕бр╣И
            INSERT INTO public.inventory_items (
                product_id,
                sku,
                product_name,
                location,
                quantity_level1,
                quantity_level2,
                quantity_level3,
                reserved_level1_quantity,
                reserved_level2_quantity,
                reserved_level3_quantity,
                unit_level1_name,
                unit_level2_name,
                unit_level3_name,
                is_deleted,
                created_at,
                updated_at
            ) VALUES (
                product_record.id,
                product_record.sku_code,
                product_record.product_name,
                'A/1/01', -- Default location
                0, -- quantity_level1
                0, -- quantity_level2
                0, -- quantity_level3
                0, -- reserved_level1_quantity
                0, -- reserved_level2_quantity
                0, -- reserved_level3_quantity
                'р╕ер╕▒р╕З', -- unit_level1_name
                'р╕Бр╕ер╣Ир╕нр╕З', -- unit_level2_name
                'р╕Кр╕┤р╣Йр╕Щ', -- unit_level3_name
                false, -- is_deleted
                NOW(),
                NOW()
            );

            created_count := created_count + 1;
        END LOOP;

        RAISE NOTICE 'тЬЕ р╕кр╕гр╣Йр╕▓р╕З inventory_items р╣Гр╕лр╕бр╣И: % р╕гр╕▓р╕вр╕Бр╕▓р╕г', created_count;
    END IF;

    -- р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
    SELECT COUNT(*) INTO missing_count
    FROM public.products p
    LEFT JOIN public.inventory_items inv ON p.id = inv.product_id
    WHERE p.is_active = true
    AND inv.product_id IS NULL;

    RAISE NOTICE 'ЁЯУК р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╣Гр╕Щ inventory р╕лр╕ер╕▒р╕Зр╣Бр╕Бр╣Йр╣Др╕В: % р╕гр╕▓р╕вр╕Бр╕▓р╕г', missing_count;

    IF missing_count = 0 THEN
        RAISE NOTICE 'ЁЯОЙ р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╕р╕Бр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕бр╕╡ inventory_items р╣Бр╕ер╣Йр╕з!';
    END IF;

END $$;

-- р╕кр╕гр╣Йр╕▓р╕З conversion_rates р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡
DO $$
DECLARE
    product_record RECORD;
    missing_conversion_count INTEGER := 0;
    created_conversion_count INTEGER := 0;
BEGIN
    -- р╕Щр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡ conversion rates
    SELECT COUNT(*) INTO missing_conversion_count
    FROM public.products p
    LEFT JOIN public.product_conversion_rates pcr ON p.sku_code = pcr.sku
    WHERE p.is_active = true
    AND pcr.sku IS NULL;

    RAISE NOTICE 'ЁЯФН р╕Юр╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡ conversion rates: % р╕гр╕▓р╕вр╕Бр╕▓р╕г', missing_conversion_count;

    IF missing_conversion_count > 0 THEN
        -- р╕кр╕гр╣Йр╕▓р╕З conversion_rates р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕бр╕╡
        FOR product_record IN
            SELECT p.id, p.sku_code, p.product_name, p.product_type
            FROM public.products p
            LEFT JOIN public.product_conversion_rates pcr ON p.sku_code = pcr.sku
            WHERE p.is_active = true
            AND pcr.sku IS NULL
            LIMIT 50 -- р╕Ир╕│р╕Бр╕▒р╕Фр╣Др╕зр╣Й 50 р╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕гр╕Б
        LOOP
            -- р╕кр╕гр╣Йр╕▓р╕З conversion_rate р╣Гр╕лр╕бр╣И
            INSERT INTO public.product_conversion_rates (
                sku,
                product_name,
                product_id,
                product_type,
                unit_level1_name,
                unit_level1_rate,
                unit_level2_name,
                unit_level2_rate,
                unit_level3_name,
                created_at,
                updated_at
            ) VALUES (
                product_record.sku_code,
                product_record.product_name,
                product_record.id,
                product_record.product_type,
                'р╕ер╕▒р╕З', -- unit_level1_name
                1, -- unit_level1_rate
                'р╕Бр╕ер╣Ир╕нр╕З', -- unit_level2_name
                1, -- unit_level2_rate
                'р╕Кр╕┤р╣Йр╕Щ', -- unit_level3_name
                NOW(),
                NOW()
            );

            created_conversion_count := created_conversion_count + 1;
        END LOOP;

        RAISE NOTICE 'тЬЕ р╕кр╕гр╣Йр╕▓р╕З conversion_rates р╣Гр╕лр╕бр╣И: % р╕гр╕▓р╕вр╕Бр╕▓р╕г', created_conversion_count;
    END IF;

END $$;

-- р╕гр╕╡р╣Ар╕Яр╕гр╕К views р╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕лр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╕бр╣Ир╕Ыр╕гр╕▓р╕Бр╕П
DROP VIEW IF EXISTS public.products_summary CASCADE;
DROP VIEW IF EXISTS public.products_with_conversions CASCADE;

-- р╕кр╕гр╣Йр╕▓р╕З products_summary view р╣Гр╕лр╕бр╣И
CREATE OR REPLACE VIEW public.products_summary AS
SELECT
    p.id,
    p.sku_code,
    p.product_name,
    p.product_type,
    p.category,
    p.subcategory,
    p.brand,
    p.unit_of_measure,
    p.is_active,
    p.created_at,
    p.updated_at,
    COALESCE(inv.total_quantity, 0) as total_inventory_quantity,
    COALESCE(inv.reserved_quantity, 0) as reserved_inventory_quantity,
    COALESCE(inv.available_quantity, 0) as available_inventory_quantity,
    COALESCE(inv.location_count, 0) as location_count
FROM public.products p
LEFT JOIN (
    SELECT
        product_id,
        SUM(COALESCE(quantity_level1, 0) + COALESCE(quantity_level2, 0) + COALESCE(quantity_level3, 0)) as total_quantity,
        SUM(COALESCE(reserved_level1_quantity, 0) + COALESCE(reserved_level2_quantity, 0) + COALESCE(reserved_level3_quantity, 0)) as reserved_quantity,
        SUM(
            (COALESCE(quantity_level1, 0) + COALESCE(quantity_level2, 0) + COALESCE(quantity_level3, 0)) -
            (COALESCE(reserved_level1_quantity, 0) + COALESCE(reserved_level2_quantity, 0) + COALESCE(reserved_level3_quantity, 0))
        ) as available_quantity,
        COUNT(DISTINCT location) as location_count
    FROM public.inventory_items
    WHERE (is_deleted = false OR is_deleted IS NULL)
    GROUP BY product_id
) inv ON p.id = inv.product_id
WHERE p.is_active = true OR p.is_active IS NULL
ORDER BY p.product_type, p.sku_code;

-- р╕кр╕гр╣Йр╕▓р╕З products_with_conversions view р╣Гр╕лр╕бр╣И
CREATE OR REPLACE VIEW public.products_with_conversions AS
SELECT
    p.id,
    p.sku_code,
    p.product_name,
    p.product_type,
    p.category,
    p.subcategory,
    p.brand,
    p.unit_of_measure,
    p.is_active,
    p.created_at as product_created_at,
    p.updated_at as product_updated_at,
    pcr.id as conversion_id,
    pcr.sku as conversion_sku,
    pcr.product_name as conversion_product_name,
    pcr.unit_level1_name,
    pcr.unit_level1_rate,
    pcr.unit_level2_name,
    pcr.unit_level2_rate,
    pcr.unit_level3_name,
    pcr.created_at as conversion_created_at,
    pcr.updated_at as conversion_updated_at,
    CASE WHEN pcr.id IS NOT NULL THEN true ELSE false END as has_conversion_rates,
    COALESCE(pcr.unit_level1_rate, 1) * 5 as example_calculation
FROM public.products p
LEFT JOIN public.product_conversion_rates pcr ON p.sku_code = pcr.sku
WHERE p.is_active = true OR p.is_active IS NULL
ORDER BY p.product_type, p.sku_code;

-- Grant permissions
GRANT SELECT ON public.products_summary TO anon, authenticated;
GRANT SELECT ON public.products_with_conversions TO anon, authenticated;

-- р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в
SELECT
    'ЁЯОп р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕В' as status,
    COUNT(*) as total_products_summary,
    COUNT(CASE WHEN total_inventory_quantity >= 0 THEN 1 END) as products_with_inventory,
    COUNT(CASE WHEN location_count > 0 THEN 1 END) as products_with_locations
FROM public.products_summary;

SELECT 'тЬЕ р╣Бр╕Бр╣Йр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ - р╕ер╕нр╕Зр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ application р╣Гр╕лр╕бр╣И!' as final_status;
